#!/usr/bin/env python3

import subprocess
import sys
import os

def git_clone(repository_url, account="nv"):
    try:
        # validate account
        valid_accounts = {"nv", "hf"}
        if account not in valid_accounts:
            print(f"invalid account: {account}")
            return 1

        # Build the command
        repository_url = f"-{account}:".join(repository_url.split(':'))
        command = ['git', 'clone', repository_url]
        
        # Execute git clone command
        result = subprocess.run(
            command,
            capture_output=True,
            text=True,
            check=False
        )
        
        if result.stdout:
            print(result.stdout)

        if result.stderr:
            print(result.stderr)

        return result.returncode
    
    except Exception as e:
        return 1


def main():
    try:
        args = sys.argv
        assert len(args) >= 1, "atleast 1 arg required"

        # clone repo
        match args:
            case [_]:
                print(f"Invalid number of args: {len(args)}")
                print("Usage: $SCRIPT$ (repository_url) [destination_path]")
                return 1
            case [_, url]:
                git_clone(url)
            case [_, acc, url]:
                git_clone(url, acc)
            case _:
                print(f"Invalid number of args: {len(args)}")
                print("Usage: $SCRIPT$ [account] (repository_url)")
                return 1

        return 0

    except Exception as e:
        print(e)
        return 1

if __name__ == "__main__":
    main()

